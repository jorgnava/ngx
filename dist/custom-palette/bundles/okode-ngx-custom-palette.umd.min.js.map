{"version":3,"sources":["ng://@okode/ngx-custom-palette/lib/layout/ion-header.directive.ts","ng://@okode/ngx-custom-palette/lib/layout/ion-content.directive.ts","ng://@okode/ngx-custom-palette/lib/layout/ion-footer.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-item.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-input.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-textarea.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-select.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-datetime.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-radio-group.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-toggle.directive.ts","ng://@okode/ngx-custom-palette/lib/custom-palette.module.ts"],"names":["IonHeaderDirective","el","this","prototype","ngOnInit","nativeElement","setAttribute","Directive","args","selector","ElementRef","IonContentDirective","IonFooterDirective","IonItemDirective","shadowCss","e","inputFloatingLabel","querySelector","inputStaticLabel","classList","add","setShadowStyle","getShadow","shadowRoot","attachShadow","mode","innerHTML","IonInputDirective","ngAfterViewChecked","input","addEventListener","IonTextAreaDirective","platform","_this","fixScrollAndCaret","is","val","value","Platform","IonSelectDirective","IonDateTimeDirective","ngAfterContentChecked","div","stringValue","fixIonItemHasValueFloatingLabel","length","parentNode","remove","IonRadioGroupDirective","IonToggleDirective","enabledText","disabledText","ngOnChanges","changes","Input","DECLARATIONS","OkodeNgxCustomPaletteModule","NgModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: `ion-header`\n})\nexport class IonHeaderDirective implements OnInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.setAttribute('custom-palette', true);\n  }\n\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: `ion-content`\n})\nexport class IonContentDirective implements OnInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.setAttribute('custom-palette', true);\n  }\n\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: `ion-footer`\n})\nexport class IonFooterDirective implements OnInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.setAttribute('custom-palette', true);\n  }\n\n}\n","import { Directive, OnInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: `ion-item`\n})\nexport class IonItemDirective implements OnInit {\n\n  private shadowCss = `\n    :host(.ion-focused) .item-native {\n      background: transparent;\n    }\n    .item-native {\n      border: none;\n      padding: 0px;\n      background: transparent;\n    }\n    .item-native .item-inner {\n      border: 0px;\n      padding: 0px;\n      min-height: 68px;\n    }\n    .item-highlight {\n      display: none !important;\n    }\n  `;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    const e = this.el.nativeElement;\n    const inputFloatingLabel = e.querySelector('ion-input, ion-select, ion-textarea, ion-datetime');\n    const inputStaticLabel = e.querySelector('ion-checkbox, ion-toggle');\n    const label = e.querySelector('ion-label');\n    if (label && (inputFloatingLabel ||Â inputStaticLabel)) {\n      e.setAttribute('custom-palette', true);\n      if (inputFloatingLabel) {\n        e.setAttribute('custom-palette-style', 'floating-label');\n        e.querySelector('ion-label').setAttribute('position', 'floating');\n      } else {\n        e.setAttribute('custom-palette-style', 'static-label');\n      }\n      // has icon?\n      if (e.querySelector('ion-icon'))Â { e.classList.add('item-has-icon'); }\n      this.setShadowStyle();\n    }\n  }\n\n  private getShadow() {\n    return this.el.nativeElement.shadowRoot || this.el.nativeElement.attachShadow({ mode: 'open' });\n  }\n\n  private setShadowStyle() {\n    this.getShadow().innerHTML += `<style>${this.shadowCss}</style>`;\n  }\n\n}\n","import { Directive, ElementRef, AfterViewChecked } from '@angular/core';\n\n@Directive({\n  selector: `ion-input`\n})\nexport class IonInputDirective implements AfterViewChecked {\n\n  private input;\n\n  constructor(\n    private el: ElementRef\n  ) {}\n\n  ngAfterViewChecked() {\n    if (!this.input) {\n      this.input = this.el.nativeElement.querySelector('input');\n      if (this.input) {\n        this.input.addEventListener('focus', () => {});\n      }\n    }\n  }\n\n}\n","import { Directive, ElementRef, AfterViewChecked } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\n@Directive({\n  selector: `ion-textarea`\n})\nexport class IonTextAreaDirective implements AfterViewChecked {\n\n  private input;\n\n  constructor(\n    private el: ElementRef,\n    private platform: Platform\n  ) {}\n\n  ngAfterViewChecked() {\n    if (!this.input) {\n      this.input = this.el.nativeElement.querySelector('textarea');\n      if (this.input) {\n        this.input.addEventListener('focus', () => this.fixScrollAndCaret());\n      }\n    }\n  }\n\n  private fixScrollAndCaret() {\n    // workaroud to flix floating caret\n    if (this.platform.is('ios')) {\n      const val = this.el.nativeElement.value;\n      this.el.nativeElement.value = val + '.';\n      this.el.nativeElement.value = val;\n    }\n  }\n\n}\n","import { Directive, OnInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: `ion-select`\n})\nexport class IonSelectDirective implements OnInit {\n\n  private shadowCss = `\n    .select-icon-inner {\n      left: -15px;\n      margin-top: -4px;\n      border-top: 8px solid;\n      border-right: 5px solid transparent;\n      border-left: 5px solid transparent;\n      opacity: .5;\n    }\n    .select-text {\n      min-height: 24px;\n      padding-right: 30px;\n      margin-bottom: 5px;\n    }\n  `;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.setShadowStyle();\n  }\n\n  private getShadow() {\n    return this.el.nativeElement.shadowRoot || this.el.nativeElement.attachShadow({ mode: 'open' });\n  }\n\n  private setShadowStyle() {\n    this.getShadow().innerHTML += `<style>${this.shadowCss}</style>`;\n  }\n\n}\n","import { Directive, OnInit, ElementRef, AfterContentChecked } from '@angular/core';\n\n@Directive({\n  selector: `ion-datetime`\n})\nexport class IonDateTimeDirective implements OnInit, AfterContentChecked {\n\n  private stringValue: string;\n\n  private shadowCss = `\n    .datetime-text {\n      top: 30px;\n      left: 16px;\n      position: absolute;\n      width: calc(100% - 70px);\n      height: 20px;\n      line-height: 20px;\n    }\n  `;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.setShadowStyle();\n  }\n\n  ngAfterContentChecked() {\n    const div = this.el.nativeElement.shadowRoot.querySelector('.datetime-text');\n    if (div) { this.stringValue = div.innerHTML; }\n    this.fixIonItemHasValueFloatingLabel();\n  }\n\n  private getShadow() {\n    return this.el.nativeElement.shadowRoot || this.el.nativeElement.attachShadow({ mode: 'open' });\n  }\n\n  private setShadowStyle() {\n    this.getShadow().innerHTML += `<style>${this.shadowCss}</style>`;\n  }\n\n  private fixIonItemHasValueFloatingLabel() {\n    if (this.stringValue && this.stringValue.length) {\n      this.el.nativeElement.parentNode.classList.add('item-has-value');\n    } else {\n      this.el.nativeElement.parentNode.classList.remove('item-has-value');\n    }\n  }\n\n}\n","import { Directive, OnInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: `ion-radio-group`\n})\nexport class IonRadioGroupDirective implements OnInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.setAttribute('custom-palette', true);\n    this.el.nativeElement.setAttribute('custom-palette-style', 'static-label');\n  }\n\n}\n","import { Directive, OnInit, ElementRef, Input, OnChanges } from '@angular/core';\n\n@Directive({\n  selector: `ion-toggle[custom-palette-toggle][mode='ios']`\n})\nexport class IonToggleDirective implements OnInit, OnChanges {\n\n  @Input() enabledText = '';\n  @Input() disabledText = '';\n\n  private shadowCss = `\n    :host {\n      width: 80px;\n    }\n    :host(.toggle-checked) .toggle-inner {\n      -webkit-transform: translate3d(48px, 0, 0);\n      transform: translate3d(48px, 0, 0);\n    }\n    :host .toggle-icon:after {\n      line-height: 33px;\n      color: white;\n      text-transform: uppercase;\n      font-weight: 800;\n      font-size: 13px;\n      width: 50px;\n      display: inline-block;\n      text-align: center;\n    }\n    :host(.toggle-checked) .toggle-icon:after {}\n    :host(:not(.toggle-checked)) .toggle-icon:after {\n      position: absolute;\n      margin-left: 28px;\n    }\n    :host(:not(.toggle-checked)) .toggle-icon {\n      background-color: #919191;\n    }\n    :host(:not(.toggle-checked)) .toggle-icon:before {\n      background: #919191;\n    }\n  `;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.setShadowStyle();\n  }\n\n  ngOnChanges(changes) {\n    if (changes && (changes.enabledText || changes.disabledText)) {\n      this.getShadow().innerHTML += `<style>\n        :host(.toggle-checked) .toggle-icon:after { content: '${this.enabledText}'; }\n        :host(:not(.toggle-checked)) .toggle-icon:after { content: '${this.disabledText}'; }\n      </style>`;\n    }\n  }\n\n  private getShadow() {\n    return this.el.nativeElement.shadowRoot || this.el.nativeElement.attachShadow({ mode: 'open' });\n  }\n\n  private setShadowStyle() {\n    this.getShadow().innerHTML += `<style>${this.shadowCss}</style>`;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { IonHeaderDirective } from './layout/ion-header.directive';\nimport { IonContentDirective } from './layout/ion-content.directive';\nimport { IonFooterDirective } from './layout/ion-footer.directive';\nimport { IonItemDirective } from './form/ion-item.directive';\nimport { IonInputDirective } from './form/ion-input.directive';\nimport { IonTextAreaDirective } from './form/ion-textarea.directive';\nimport { IonSelectDirective } from './form/ion-select.directive';\nimport { IonDateTimeDirective } from './form/ion-datetime.directive';\nimport { IonRadioGroupDirective } from './form/ion-radio-group.directive';\nimport { IonToggleDirective } from './form/ion-toggle.directive';\n\nconst DECLARATIONS = [\n  IonHeaderDirective,\n  IonContentDirective,\n  IonFooterDirective,\n  IonItemDirective,\n  IonInputDirective,\n  IonTextAreaDirective,\n  IonSelectDirective,\n  IonDateTimeDirective,\n  IonRadioGroupDirective,\n  IonToggleDirective\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  exports: DECLARATIONS,\n  providers: []\n})\nexport class OkodeNgxCustomPaletteModule {}\n"]}