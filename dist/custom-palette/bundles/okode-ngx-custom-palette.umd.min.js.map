{"version":3,"sources":["ng://@okode/ngx-custom-palette/lib/layout/ion-header.directive.ts","ng://@okode/ngx-custom-palette/lib/layout/ion-content.directive.ts","ng://@okode/ngx-custom-palette/lib/layout/ion-footer.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-item.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-input.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-select.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-datetime.directive.ts","ng://@okode/ngx-custom-palette/lib/form/ion-radio-group.directive.ts","ng://@okode/ngx-custom-palette/lib/custom-palette.module.ts"],"names":["IonHeaderDirective","el","this","prototype","ngOnInit","nativeElement","setAttribute","Directive","args","selector","ElementRef","IonContentDirective","IonFooterDirective","IonItemDirective","shadowCustomCss","e","inputFloatingLabel","querySelector","inputStaticLabel","classList","add","setShadowStyle","getShadow","shadowRoot","attachShadow","mode","innerHTML","IonInputDirective","IonSelectDirective","IonDateTimeDirective","ngOnChanges","changes","currentValue","ngModel","fixIonItemHasValueFloatingLabel","ngAfterContentChecked","parentNode","remove","Input","IonRadioGroupDirective","DECLARATIONS","OkodeNgxCustomPaletteModule","NgModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: `ion-header`\n})\nexport class IonHeaderDirective implements OnInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.setAttribute('custom-palette', true);\n  }\n\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: `ion-content`\n})\nexport class IonContentDirective implements OnInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.setAttribute('custom-palette', true);\n  }\n\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: `ion-footer`\n})\nexport class IonFooterDirective implements OnInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.setAttribute('custom-palette', true);\n  }\n\n}\n","import { Directive, OnInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: `ion-item`\n})\nexport class IonItemDirective implements OnInit {\n\n  private shadowCustomCss = `\n    .item-native {\n      border: none;\n      padding: 0px;\n    }\n    .item-native .item-inner {\n      border: 0px;\n      padding: 0px;\n      min-height: 68px;\n    }\n    .item-highlight {\n      display: none !important;\n    }\n  `;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    const e = this.el.nativeElement;\n    const inputFloatingLabel = e.querySelector('ion-input, ion-select, ion-textarea, ion-datetime');\n    const inputStaticLabel = e.querySelector('ion-checkbox, ion-toggle');\n    const label = e.querySelector('ion-label');\n    if (label && (inputFloatingLabel ||Â inputStaticLabel)) {\n      e.setAttribute('custom-palette', true);\n      if (inputFloatingLabel) {\n        e.setAttribute('custom-palette-style', 'floating-label');\n        e.querySelector('ion-label').setAttribute('position', 'floating');\n      } else {\n        e.setAttribute('custom-palette-style', 'static-label');\n      }\n      // has icon?\n      if (e.querySelector('ion-icon'))Â { e.classList.add('item-has-icon'); }\n      this.setShadowStyle();\n    }\n  }\n\n  private getShadow() {\n    return this.el.nativeElement.shadowRoot || this.el.nativeElement.attachShadow({ mode: 'open' });\n  }\n\n  private setShadowStyle() {\n    this.getShadow().innerHTML += `<style>${this.shadowCustomCss}</style>`;\n  }\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: `ion-input`\n})\nexport class IonInputDirective {\n\n  constructor(private el: ElementRef) {}\n\n}\n","import { Directive, OnInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: `ion-select`\n})\nexport class IonSelectDirective implements OnInit {\n\n  private shadowCustomCss = `\n    .select-icon-inner {\n      left: -15px;\n      margin-top: -2px;\n      border-top: 7px solid;\n      border-right: 5px solid transparent;\n      border-left: 5px solid transparent;\n      opacity: .33;\n    }\n    .select-text {\n      min-height: 30px;\n      padding-right: 20px;\n    }\n  `;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.setShadowStyle();\n  }\n\n  private getShadow() {\n    return this.el.nativeElement.shadowRoot || this.el.nativeElement.attachShadow({ mode: 'open' });\n  }\n\n  private setShadowStyle() {\n    this.getShadow().innerHTML += `<style>${this.shadowCustomCss}</style>`;\n  }\n\n}\n","import { Directive, OnInit, ElementRef, Input, OnChanges, SimpleChanges, AfterContentChecked } from '@angular/core';\n\n@Directive({\n  selector: `ion-datetime`\n})\nexport class IonDateTimeDirective implements OnInit, OnChanges, AfterContentChecked {\n\n  @Input() ngModel: string;\n\n  private currentValue: string;\n\n  private shadowCustomCss = `\n    .datetime-text {\n      top: 28px;\n      left: 16px;\n      position: absolute;\n      width: calc(100% - 70px);\n    }\n  `;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.setShadowStyle();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.currentValue = changes.ngModel.currentValue;\n    this.fixIonItemHasValueFloatingLabel();\n  }\n\n  ngAfterContentChecked() {\n    this.fixIonItemHasValueFloatingLabel();\n  }\n\n  private getShadow() {\n    return this.el.nativeElement.shadowRoot || this.el.nativeElement.attachShadow({ mode: 'open' });\n  }\n\n  private setShadowStyle() {\n    this.getShadow().innerHTML += `<style>${this.shadowCustomCss}</style>`;\n  }\n\n  private fixIonItemHasValueFloatingLabel() {\n    if (this.currentValue) {\n      this.el.nativeElement.parentNode.classList.add('item-has-value');\n    } else {\n      this.el.nativeElement.parentNode.classList.remove('item-has-value');\n    }\n  }\n\n}\n","import { Directive, OnInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: `ion-radio-group`\n})\nexport class IonRadioGroupDirective implements OnInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.setAttribute('custom-palette', true);\n    this.el.nativeElement.setAttribute('custom-palette-style', 'static-label');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { IonHeaderDirective } from './layout/ion-header.directive';\nimport { IonContentDirective } from './layout/ion-content.directive';\nimport { IonFooterDirective } from './layout/ion-footer.directive';\nimport { IonItemDirective } from './form/ion-item.directive';\nimport { IonInputDirective } from './form/ion-input.directive';\nimport { IonSelectDirective } from './form/ion-select.directive';\nimport { IonDateTimeDirective } from './form/ion-datetime.directive';\nimport { IonRadioGroupDirective } from './form/ion-radio-group.directive';\n\nconst DECLARATIONS = [\n  IonHeaderDirective,\n  IonContentDirective,\n  IonFooterDirective,\n  IonItemDirective,\n  IonInputDirective,\n  IonSelectDirective,\n  IonDateTimeDirective,\n  IonRadioGroupDirective\n];\n\n@NgModule({\n  declarations: DECLARATIONS,\n  exports: DECLARATIONS,\n  providers: []\n})\nexport class OkodeNgxCustomPaletteModule {}\n"]}