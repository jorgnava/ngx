version: 2.1

description: Okode ngx

cache-key-npm: &cache-key-npm
  key: cache-npm-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}

branches: &branches
  context: org-global

tags: &tags
  context: org-global
  filters:
    branches:
      ignore:
        - /.*/
    tags:
      only: /.*/

orbs:
  lib:
    executors:
      browsers:
        docker:
          - image: circleci/node:12-browsers
      node:
        docker:
          - image: circleci/node:12
      python:
        docker:
          - image: circleci/python:3
    jobs:
      test:
        parameters:
          project:
            type: string
        executor: browsers
        steps:
          - build:
              package: false
              project: << parameters.project >>
      package:
        parameters:
          project:
            type: string
          copy-styles:
            type: boolean
            default: false
        executor: node
        steps:
          - build:
              package: true
              project: << parameters.project >>
              copy-styles: << parameters.copy-styles >>
      pwa:
        executor: node
        steps:
          - pwa
      pwadeploy:
        executor: python
        steps:
          - attach_workspace:
              at: /tmp/workspace
          - run:
              name: Deploying PWA to AWS S3
              command: |
                sudo pip install awscli
                aws s3 rm s3://ngx-doc --recursive
                aws s3 sync /tmp/workspace/www s3://ngx-doc --acl public-read

    commands:
      build:
        parameters:
          package:
            type: boolean
          project:
            type: string
          copy-styles:
            type: boolean
            default: false
        steps:
          - checkout
          - restore_cache:
              << : *cache-key-npm
          - run:
              name: Installing NPM dependencies
              command: if [ ! -d "node_modules" ]; then npm ci; fi
          - when:
              condition: << parameters.package >>
              steps:
                - run:
                    name: Installing Angular CLI
                    command: yes | sudo npm install -g @angular/cli || true
                - run:
                    name: Installing NPM CLI Login
                    command: sudo npm install -g npm-cli-login
                - run:
                    name: Building
                    command: ng build << parameters.project >>
                - when:
                    condition: << parameters.copy-styles >>
                    steps:
                      - run:
                          name: Copy styles
                          command: cp -R projects/<< parameters.project >>/styles dist/<< parameters.project >>/
                - persist_to_workspace:
                    root: dist
                    paths:
                      - << parameters.project >>
                - run:
                    name: Authenticating NPM
                    command: npm-cli-login
                - run:
                    name: Publishing NPM package
                    command: cd dist/<< parameters.project >> && npm publish --access=public
          - unless:
              condition: << parameters.package >>
              steps:
                - run:
                    name: Installing Angular CLI
                    command: yes | sudo npm install -g @angular/cli || true
                - run:
                    name: Building
                    command: ng build << parameters.project >>
          - run:
              name: Restoring package-lock.json
              command: git checkout package-lock.json
          - save_cache:
              << : *cache-key-npm
              paths:
                - node_modules
      pwa:
        steps:
          - checkout
          - restore_cache:
              << : *cache-key-npm
          - run:
              name: Installing NPM dependencies
              command: if [ ! -d "node_modules" ]; then npm ci; fi
          - run:
              name: Installing Ionic
              command: sudo npm install -g ionic
          - attach_workspace:
              at: dist
          - run:
              name: Building
              command: ionic build
          - run:
              name: Building docs
              command: npm run doc
          - run:
              name: Copying docs
              command: cp -R documentation www
          - persist_to_workspace:
              root: .
              paths:
                - www
          - run:
              name: Restoring package-lock.json
              command: git checkout package-lock.json
          - save_cache:
              << : *cache-key-npm
              paths:
                - node_modules

workflows:
  workflow:
    jobs:
      - lib/test:
          <<: *branches
          name: test-common
          project: common
      - lib/package:
          <<: *tags
          name: package-common
          project: common
      - lib/test:
          <<: *branches
          name: test-custom-palette
          project: custom-palette
      - lib/package:
          <<: *tags
          name: package-custom-palette
          project: custom-palette
          copy-styles: true
      - lib/pwa:
          <<: *tags
          name: pwa
          requires:
            - package-common
            - package-custom-palette
      - lib/pwadeploy:
          <<: *tags
          name: pwadeploy
          requires:
            - pwa

